// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Home row mods macro
#define HRML(k1,k2,k3,k4) &ht LCTRL k1  &ht LALT k2  &ht LC(LALT) k3  &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RC(RALT) k2  &ht RALT k3 &ht RCTRL k4

#define DEF 0
#define GAM 1
#define RIG 2
#define LEF 3
#define TRI 4

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <RIG LEF>;
            then-layer = <TRI>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_lenter {
            timeout-ms = <40>;
            key-positions = <2 3>;
            bindings = <&kp ENTER>;
        };
        combo_ldel {
            timeout-ms = <40>;
            key-positions = <22 23>;
            bindings = <&kp BSPC>;
        };
        combo_lins {
            timeout-ms = <40>;
            key-positions = <21 22 23>;
            bindings = <&kp DEL>;
        };
        combo_renter {
            timeout-ms = <40>;
            key-positions = <6 7>;
            bindings = <&kp ENTER>;
        };
        combo_rdel {
            timeout-ms = <40>;
            key-positions = <26 27>;
            bindings = <&kp BSPC>;
        };
        combo_rins {
            timeout-ms = <40>;
            key-positions = <26 27 28>;
            bindings = <&kp DEL>;
        };

        sh_space_dash_combo {
            timeout-ms = <1000>; 
            key-positions = <31 32>; 
            bindings = <&kp MINUS>;
        };
    };

    macros {
        ti_ch: ti_ch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp MINUS &kp GT>
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │    ; :   │
            &kp A     HRML(S,         D,         F,      G)            HRMR( H,      J,        K,           L)     &kp SEMI
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │ / ?      │
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT    &kp SLASH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                        &lt LEF TAB  &ht LSHIFT ESC    &kp SPACE  &lt RIG SQT
        //                                 ╰──────────┴──────────╯   ╰─────────┴──────────╯
            >;
        };

        gaming_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //           │  Q       │  W       │  E       │  R       │   │    Y     │  U       │  I       │  O       │  P       │
             &kp ESC    &kp Q      &kp W      &kp E      &kp R         &trans      &trans      &trans    &trans    &trans   
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //           │  A       │  S       │  D       │  F       │   │          │          │          │          │          │ 
           &kp LSHIFT   &kp A    &kp S        &kp D      &kp F        &trans       &trans     &trans    &trans     &trans
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //           │  Z       │  X       │  C       │  V       │   │          │          │          │          │          │
            &kp LCTRL  &kp Z      &kp X      &kp C      &kp V          &trans      &trans      &trans    &trans     &trans  
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                           &lt LEF LALT &kp SPACE     &kp SPACE  &lt RIG TAB
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        right_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ 1        │  2       │  3       │  4       │  5       │   │ 6        │ 7        │ 8        │ 9        │   0      │
            &kp N1    &kp N2     &kp N3     &kp N4     &kp N5          &kp N6     &kp N7     &kp N8     &kp N9      &kp N0
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ DELETE   │          │          │          │          |   |    LEFT  │  DOWN    │  UP      │  RIGHT   │          │
            &kp DEL   HRML(LCTRL,   BSPC,      RET,       INS)         &kp LARW   &kp DARW   &kp UARW   &kp RARW    &trans 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │     HOME │PAGE DN   │ PAGE UP  │ END      │          │
            &trans     &trans     &kp CAPS   &kp INS   &trans          &kp HOME  &kp PG_DN   &kp PG_UP   &kp END    &trans  
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                            &kp LS(TAB)   &trans        &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        left_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  !       │  @       │  #       │  $       │  %       │   │  ^       │  &       │  *       │  (       │  )       │
            &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT      &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR   &kp RPAR
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │  [       │  {       │  (       │          │   │   /      │  {       │  }       │     [    │  ]       │
            &kp GRAVE  HRML( LBKT,   LBRC,     LPAR,    &trans)         &kp FSLH   &kp LBRC  &kp RBRC  &kp LBKT   &kp RBKT
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├────'──────┼──────────┼──────────┼──────────┼──────────┤
        //│          │  ]       │  }       │  )       │          │   │    \      │  =       │  +       │  ->      │   \      │
            &kp TILDE     &kp RBKT   &kp RBRC   &kp RPAR   &trans      &kp BSLH   &kp EQUAL   &kp PLUS   &ti_ch    &kp BSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &kp UNDER    &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        tri_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬───────────┬────────────╮   ╭────────────┬────────────┬──────────┬───────────┬──────────╮
        //│  F1      │  F2      │  F3      │  F4       │ F5      │  │    F6      │    f7      │   f8     │   f9      │  f10     │
            &kp F1     &kp F2     &kp F3     &kp F4     &kp F5            &kp F6      &kp F7        &kp F8     &kp F9      &kp F10 
        //├──────────┼──────────┼──────────┼───────────┼────────────┤   ├────────────┼────────────┼──────────┼───────────┼──────────┤
        //│  BT0     │  BT1     │  F7      │  F8       │ TOGGLE GAME│   │            │ INC BRIGHT │          │  VOL UP   │ f11      │
      &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_CLR_ALL  &trans  &tog GAM         &trans      &kp C_BRI_INC  &trans   &kp C_VOL_UP  &kp F11
        //├──────────┼──────────┼──────────┼───────────┼────────────┤   ├────────────┼────────────┼──────────┼───────────┼──────────┤
        //│  BT3     │  BT4     │ TOGGLEOUT│           │            │   │            │ DEC BRIGHT │          |  VOL DOWN │ f12      │
        &bt BT_SEL 3  &bt BT_SEL 4 &out OUT_TOG  &trans  &bootloader    &bootloader  &kp C_BRI_DEC  &trans   &kp C_VOL_DN &kp F12
        //╰──────────┴──────────┴──────────┼───────────┼────────────┤   ├────────────┼────────────┼──────────┴───────────┴──────────╯
                                                &trans     &trans        &trans     &trans
        //                                  ╰───────────┴──────────╯   ╰──────────┴────────────╯
            >;
        };
    };
};
